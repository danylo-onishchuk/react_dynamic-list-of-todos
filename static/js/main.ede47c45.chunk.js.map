{"version":3,"sources":["components/Input/Input.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["Input","setSearchValue","setSelectorValue","searchValue","search","filtered","shuffle","type","placeholder","value","onChange","e","target","onClick","classNames","require","Todo","selectUser","todo","handleChange","className","completed","key","id","checked","title","name","userId","selected","TodoList","PropTypes","bool","isRequired","number","string","state","selectorValue","props","todosVisible","elementTodo","find","setState","this","map","React","Component","CurrentUser","user","clear","email","phone","getUsers","fetch","then","response","json","App","allTodos","selectedUserId","errorData","filterInfo","todosSelected","i","length","needUser","data","clearSelect","todosUnSelected","visible","filter","toLowerCase","includes","needTodos","randomList","random","Math","floor","a","result","todos","hidden","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ede47c45.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Input = ({ setSearchValue, setSelectorValue, searchValue,\n  search, filtered, shuffle }) => (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"Search by title\"\n        value={searchValue}\n        onChange={(e) => {\n          setSearchValue(e);\n          search(e.target.value);\n        }}\n      />\n      <select\n        onChange={(e) => {\n          setSelectorValue(e);\n          filtered(e.target.value, searchValue);\n        }}\n      >\n        <option value=\"all\">All</option>\n        <option value=\"active\">Active</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n      <button\n        type=\"button\"\n        onClick={shuffle}\n      >\n        Random it!\n      </button>\n    </>\n);\n\nInput.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n  setSearchValue: PropTypes.func.isRequired,\n  setSelectorValue: PropTypes.func.isRequired,\n  search: PropTypes.func.isRequired,\n  filtered: PropTypes.func.isRequired,\n  shuffle: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nexport const Todo = ({ selectUser, todo, handleChange }) => (\n  <li\n    className={classNames('TodoList__item', {\n      'TodoList__item--unchecked': !todo.completed,\n      'TodoList__item--checked': todo.completed,\n    })}\n    key={todo.id}\n  >\n    <label>\n      <input\n        id={todo.id}\n        type=\"checkbox\"\n        checked={todo.completed}\n        onChange={handleChange}\n      />\n      <p>{todo.title}</p>\n    </label>\n    <button\n      name={todo.userId}\n      className={classNames('TodoList__user-button', 'button', {\n        'TodoList__user-button--selected': todo.selected,\n      })}\n      type=\"button\"\n      onClick={(e) => {\n        selectUser(e.target.name);\n      }}\n    >\n      User&nbsp;#\n      {todo.userId}\n    </button>\n  </li>\n);\n\nexport const todoType = {\n  completed: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nTodo.propTypes = {\n  selectUser: PropTypes.func.isRequired,\n  todo: todoType.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TodoList.scss';\n\nimport { Input } from '../Input';\nimport { Todo, todoType } from '../Todo';\n\nexport class TodoList extends React.Component {\n  state = {\n    searchValue: '',\n    selectorValue: 'all',\n  }\n\n  handleChange = (e) => {\n    const { todosVisible, filtered } = this.props;\n    const { selectorValue, searchValue } = this.state;\n    const elementTodo = todosVisible.find(todo => todo.id === +e.target.id);\n\n    elementTodo.completed = !elementTodo.completed;\n    filtered(selectorValue, searchValue);\n  }\n\n  setSearchValue = (e) => {\n    this.setState({ searchValue: e.target.value });\n  }\n\n  setSelectorValue = (e) => {\n    this.setState({ selectorValue: e.target.value });\n  }\n\n  render() {\n    const { selectUser, search,\n      filtered, shuffle, todosVisible } = this.props;\n    const { searchValue } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <Input\n          searchValue={searchValue}\n          setSearchValue={this.setSearchValue}\n          setSelectorValue={this.setSelectorValue}\n          search={search}\n          filtered={filtered}\n          shuffle={shuffle}\n        />\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todosVisible.map(todo => (\n              <Todo\n                selectUser={selectUser}\n                todo={todo}\n                handleChange={this.handleChange}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todosVisible: PropTypes.arrayOf(todoType).isRequired,\n  search: PropTypes.func.isRequired,\n  filtered: PropTypes.func.isRequired,\n  selectUser: PropTypes.func.isRequired,\n  shuffle: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ user, clear }) => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        Selected user:\n        &nbsp;\n        {user.id}\n      </span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">{user.name}</h3>\n    <p className=\"CurrentUser__email\">{user.email}</p>\n    <p className=\"CurrentUser__phone\">{user.phone}</p>\n    <button\n      type=\"button\"\n      className=\"btn btn-primary CurrentUser__button\"\n      onClick={clear}\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n  clear: PropTypes.func.isRequired,\n};\n","export function getTodos() {\n  return fetch(`https://mate-api.herokuapp.com/todos`)\n    .then(response => response.json())\n    .then(result => result.data.filter(todo => (\n      todo.title !== null\n      && todo.title !== ''\n      && todo.userId !== null\n      && todo.completed !== null\n    )));\n}\n\nexport function getUsers(userId) {\n  return fetch(`https://mate-api.herokuapp.com/users/${userId}`)\n    .then(response => response.json());\n}\n","import React from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUsers } from './api';\n\nexport class App extends React.Component {\n  state = {\n    allTodos: [],\n    todosVisible: [],\n    selectedUserId: 0,\n    user: {},\n    errorData: true,\n    filterInfo: 'all',\n  };\n\n  async componentDidMount() {\n    await getTodos()\n      .then(todos => this.setState({\n        allTodos: todos,\n        todosVisible: todos.map(todo => ({\n          ...todo,\n          selected: false,\n        })),\n      }));\n  }\n\n  selectUser = (userId) => {\n    const { selectedUserId, todosVisible } = this.state;\n    const todosSelected = [...todosVisible];\n\n    for (let i = 0; i < todosSelected.length; i += 1) {\n      if (todosSelected[i].userId === +userId) {\n        todosSelected[i].selected = true;\n      } else {\n        todosSelected[i].selected = false;\n      }\n    }\n\n    this.setState({\n      todosVisible: todosSelected,\n    });\n\n    if (userId !== selectedUserId) {\n      getUsers(userId)\n        .then((needUser) => {\n          if (needUser.data !== null) {\n            this.setState({\n              user: needUser.data,\n              selectedUserId: userId,\n              errorData: true,\n            });\n          } else {\n            this.setState({\n              selectedUserId: 0,\n              errorData: false,\n            });\n          }\n        });\n    }\n  }\n\n  clear = () => {\n    this.setState({\n      selectedUserId: 0,\n      user: {},\n    });\n\n    this.clearSelect();\n  }\n\n  clearSelect = () => {\n    const { todosVisible } = this.state;\n    const todosUnSelected = todosVisible.map(todo => ({\n      ...todo,\n      selected: false,\n    }));\n\n    this.setState({\n      todosVisible: todosUnSelected,\n    });\n  }\n\n  search = (value) => {\n    const { filterInfo } = this.state;\n    const needTodos = this.filtered(filterInfo, value);\n    const visible = needTodos.filter(todo => (\n      todo.title.toLowerCase().includes(value.toLowerCase())\n    ));\n\n    this.setState({\n      todosVisible: visible,\n    });\n  }\n\n  filtered = (value, searchValue) => {\n    const { allTodos } = this.state;\n    const needTodos = allTodos.filter(todo => (\n      todo.title.toLowerCase().includes(searchValue.toLowerCase())\n    ));\n    let visible;\n\n    switch (value) {\n      case 'completed':\n        visible = needTodos.filter(todo => (\n          todo.completed === true\n        ));\n        break;\n\n      case 'active':\n        visible = needTodos.filter(todo => (\n          todo.completed === false\n        ));\n        break;\n\n      case 'all':\n        visible = needTodos;\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      todosVisible: visible,\n      filterInfo: value,\n    });\n\n    return visible;\n  }\n\n  shuffle = () => {\n    const { todosVisible } = this.state;\n    const randomList = todosVisible;\n\n    for (let i = randomList.length - 1; i > 0; i -= 1) {\n      const random = Math.floor(Math.random() * (i + 1));\n      // eslint-disable-next-line\n      [randomList[i], randomList[random]] = [randomList[random], randomList[i]];\n    }\n\n    this.setState({ todosVisible: randomList });\n  }\n\n  render() {\n    const { todosVisible, selectedUserId, user, errorData } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todosVisible={todosVisible}\n            selectUser={this.selectUser}\n            search={this.search}\n            filtered={this.filtered}\n            shuffle={this.shuffle}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                user={user}\n                clear={this.clear}\n              />\n            ) : 'No user selected'}\n            <p hidden={errorData}>\n              No such user!\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}